# general settings
name: sample_test
# name: batch8
model_type: ImageCleanModel
scale: 1
num_gpu: 4  # set num_gpu: 0 for cpu mode
manual_seed: 100

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_PaddedImage # make lr image from gt image on the fly.
    dataroot_gt: PATH_TO_TRAIN_SET  # TODO

    filename_tmpl: '{}'
    io_backend:
      type: disk

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8 # 8
    batch_size_per_gpu: 2 # 8

    gt_size: 256

    dataset_enlarge_ratio: 1
    prefetch_mode: ~

    sensor_size: 1215
    psf_size: 135

  val:
    name: ValSet
    type: Dataset_PaddedImage
    dataroot_gt: PATH_TO_TEST_SET # TODO
    io_backend:
      type: disk

    sensor_size: 1215
    psf_size: 135

# network structures
network_g:
  type: ACFormer
  inp_channels: 39
  out_channels: 3
  dim: 48
  num_blocks: [2,4,4,4]
  num_refinement_blocks: 4
  channel_heads: [1,2,4,8]
  spatial_heads: [1,2,4,8]
  overlap_ratio: [0.5,0.5,0.5,0.5]
  window_size: 8
  spatial_dim_head: 16
  ffn_expansion_factor: 2.66
  bias: False
  LayerNorm_type: WithBias
  ca_dim: 32
  ca_heads: 2
  M: 13
  window_size_ca: 8
  query_ksize: [15,11,7,3,3]

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  eval_only: True
  eval_name: Sample_data
  real_psf: True
  grid: True
  total_iter: 100000
  warmup_iter: -1 # no warm up
  use_grad_clip: true
  contrast_tik: 2
  sensor_height: 1215

  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [92000, 208000]       
    restart_weights: [1,1]
    eta_mins: [0.0003,0.000001]   
  
  mixing_augs:
    mixup: false
    mixup_beta: 1.2
    use_identity: true

  optim_g:
    type: AdamW
    lr: !!float 3e-4
    weight_decay: !!float 1e-4
    betas: [0.9, 0.999]
  
  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: mean
  
  ks:
    start: -2
    end: -5
    num: 13


# validation settings
val:
  window_size: 8
  val_freq: !!float 1e8 # inactivated
  save_img: false
  rgb2bgr: true
  use_image: true
  max_minibatch: 8
  padding: 64
  apply_conv: True  # Apply convolution to GT image to create lr image. False if load .npy data (already aberrated)

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: true

# logging settings
logger:
  print_freq: 500
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29502
